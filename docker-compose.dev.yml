services:
  postgres:
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - database.env
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./server/dbStuff/:/app/server/dbStuff/

  nginx:
    restart: always
    build: ./nginx
    ports:
      - "5000:5000"
    links:
      - "postgres"
      - "api"
      - "client"
    depends_on:
      - api
      - client

  api:
    build: 
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - '8080:8080'
    env_file:
      - server.env
    volumes:
      - ./server/:/app/server
      - /app/server/node_modules
    depends_on:
      - postgres
    command: sh -c '/app/server/wait-for postgres:5432 -- npm start'
  client:
    build: 
      context: ./client
      dockerfile: Dockerfile.dev
    volumes:
      - ./client:/app/client
      - /app/client/node_modules
    stdin_open: true
    tty: true
    # ports:
    #   - "80:3000"

    links:
      - "api"
    depends_on:
      - api
  caddy:
    image: caddy:2.6.2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - $PWD/Caddyfile.dev:/etc/caddy/Caddyfile
      - $PWD/site:/srv
      - caddy_data:/data
      - caddy_config:/config

volumes:
  postgres-data:
  caddy_data:
  caddy_config:

